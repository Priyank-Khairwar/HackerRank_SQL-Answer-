/*
Query all columns for all American cities in CITY with populations larger than 100,000. The CountryCode for America is USA.
Input Format
The CITY table is described as follows:
+-------------+--------------+
| Field       | Type         |
+-------------+--------------+
| ID          | NUMBER       |
| NAME        | VARCHAR2(17) |
| COUNTRYCODE | VARCHAR2(3)  |
| DISTRICT    | VARCHAR2(20) |
| POPULATION  | NUMBER       |
+-------------+--------------+
 */
answer:::::::::::::::::::::::::::::::::::::::::::::

SELECT *
FROM CITY
WHERE POPULATION > 100000 AND COUNTRYCODE = "USA";

==========================================================================================================
/*Query all columns for a city in CITY with the ID 1661.
Input Format
The CITY table is described as follows:
Field	                        Type
ID	                    NUMBER
NAME	                    VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	                   VARCHAR2(20)
POPULATION	NUMBER*/

Answer:
select * from city where id=1661;


=============================================================================================================
/*Query all columns for every row in the CITY table.

Input Format

The CITY table is described as follows:

Field	Type
ID	NUMBER
NAME	VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	VARCHAR2(20)
POPULATION	NUMBER*/
Solution

Answer: 
SELECT * FROM CITY;
==============================================================================================================
/*
Query the the names of all the Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

Input Format

The CITY table is described as follows:

Field	Type
ID	NUMBER
NAME	VARCHAR2(17)
COUNTRY CODE	VARCHAR2(3)
DISTRICT	VARCHAR2(20)
POPULATION	NUMBER
*/

Solution:

SELECT NAME FROM CITY WHERE COUNTRYCODE = 'JPN';  

===============================================================================================================
/*Query a list of CITY and STATE from STATION.

Input Format

The STATION table is described as follows:

Field	Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
*/
Solution

SELECT CITY,STATE FROM STATION;    
===============================================================================================================
/*Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

Field	Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.*/

Solution
SELECT DISTINCT CITY FROM
STATION WHERE (CITY LIKE 'A%' OR CITY LIKE 'E%' OR
               CITY LIKE 'I%'  OR CITY LIKE 'O%' OR CITY LIKE 'U%') AND 
       (CITY LIKE '%a' OR CITY LIKE '%e' OR CITY LIKE '%i' 
        OR CITY LIKE '%o' OR CITY LIKE '%u') 
        order by city;   
===============================================================================================================
/*Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

Field	Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.*/

Solution


SELECT DISTINCT CITY FROM STATION WHERE upper(SUBSTR(CITY,1,1)) NOT IN ('A','E','I','O','U') AND lower(SUBSTR(CITY,1,1)) NOT IN
('a','e','i','o','u');   
===============================================================================================================
/*Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

Field	Type
ID	NUMBER
CITY	VARCHAR2(21)
STATE	VARCHAR2(2)
LAT_N	NUMBER
LONG_W	NUMBER
where LAT_N is the northern latitude and LONG_W is the western longitude.*/

Solution

SELECT DISTINCT CITY FROM STATION WHERE UPPER(SUBSTR(CITY, LENGTH(CITY), 1)) NOT IN ('A','E','I','O','U') AND LOWER(SUBSTR(CITY, LENGTH(CITY),1)) NOT IN ('a','e','i','o','u');    
